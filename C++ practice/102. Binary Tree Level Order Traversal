/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        vector<vector<int>> ans;
        
        if(root == NULL){
            return ans;
        }
        
        queue<TreeNode*> q;
        q.push(root);

        while(!q.empty()){
            int len = q.size();
            vector<int> cur_level;

            for(int i = 0; i<len; i++){
                TreeNode* p = q.front();
                q.pop();
                cur_level.push_back(p->val);

                if(p->left){
                    cout << "left seen" << endl;
                    q.push(p->left);
                }

                if(p->right){
                    cout << "right seen" << endl;
                    q.push(p->right);
                }
            }
            ans.push_back(cur_level);

        }
        return ans;


    }
};
