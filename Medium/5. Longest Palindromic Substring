class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        
        start = 0
        end = 0
        
        def helper(left, right):
            while left >= 0 and right < len(s) and s[left] == s[right]:
                left -= 1
                right += 1
            return right - left - 1
        
        
        for i in range(len(s) - 1):
            mid_unique = helper(i,i)
            mid_dupe = helper(i, i + 1)
            
            size = max(mid_unique, mid_dupe)
            if size > end - start:
                start = i - ((size - 1) / 2)
                end = i + (size / 2)
        
        return s[start:end + 1]
        
