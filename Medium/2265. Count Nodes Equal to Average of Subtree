# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def averageOfSubtree(self, root: Optional[TreeNode]) -> int:
        ans = 0

        def search(node):
            nonlocal ans

            if not node:
                return 0,0

            leftSum, leftCount = search(node.left)
            rightSum, rightCount = search(node.right)

            total = leftSum + rightSum + node.val
            subTree = leftCount + rightCount + 1

            if (total //subTree) == node.val:
                ans += 1
            
            return total, subTree
        
        search(root)

        return ans
