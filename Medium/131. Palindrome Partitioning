class Solution:
    def partition(self, s: str) -> List[List[str]]:
        ans = []
        palindromes = []
        
        def dfs(i):
            if i >= len(s):
                ans.append(palindromes.copy())
                return
            
            for j in range(i, len(s)):
                if self.isPalindrome(s, i, j):
                    palindromes.append(s[i:j + 1])
                    dfs(j + 1)
                    palindromes.pop()
            
        dfs(0)
        return ans
    
    def isPalindrome(self, s, left, right):
        while left < right:
            if s[left] != s[right]:
                return False
            
            left += 1
            right -= 1
        return True
