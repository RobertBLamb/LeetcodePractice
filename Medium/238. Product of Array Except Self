class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        n = len(nums)
        left_prod = [None] * n
        right_prod = [None]* n
        
        left_prod[0] = 1
        right_prod[n - 1] = 1
        
        ans_arr = [None]* n
        
        for i in range(1, n):
            left_prod[i] = left_prod[i - 1] * nums[i - 1]
            
        for i in range(n - 2, -1, -1):
            right_prod[i] = right_prod[i + 1] * nums[i + 1]
            
        for i in range(n):
            ans_arr[i] = left_prod[i] * right_prod[i]
            
        return ans_arr
            
        class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        n = len(nums)
        
        ans_arr = [None]* n
        ans_arr[0] = 1
        
        for i in range(1, n):
            ans_arr[i] = ans_arr[i - 1] * nums[i - 1]
        
        temp = 1
        for i in range(n - 1, -1, -1):
            ans_arr[i] = ans_arr[i] * temp
            temp *= nums[i]   
            
        return ans_arr
