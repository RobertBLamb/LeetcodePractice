class Solution(object):
    def validPath(self, n, edges, source, destination):
        """
        :type n: int
        :type edges: List[List[int]]
        :type source: int
        :type destination: int
        :rtype: bool
        """
        neighbors = defaultdict(list)
        for n1, n2 in edges:
            neighbors[n1].append(n2)
            neighbors[n2].append(n1)
        
        seen = set([source])
        queue = [source]
        
        while queue:
            
            cur = queue.pop(0)
            if cur == destination:
                return True    
            for node in neighbors[cur]:   
                if node not in seen:
                    seen.add(node)
                    queue.append(node)
        return False
                
                
